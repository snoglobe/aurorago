// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IdTok-0]
	_ = x[NumberTok-1]
	_ = x[StringTok-2]
	_ = x[NewlineTok-3]
	_ = x[LparenTok-4]
	_ = x[RparenTok-5]
	_ = x[LbraceTok-6]
	_ = x[RbraceTok-7]
	_ = x[ArrowTok-8]
	_ = x[CommaTok-9]
	_ = x[ColonTok-10]
	_ = x[PlusTok-11]
	_ = x[MinusTok-12]
	_ = x[StarTok-13]
	_ = x[SlashTok-14]
	_ = x[PercentTok-15]
	_ = x[EqualTok-16]
	_ = x[NotequalTok-17]
	_ = x[LessTok-18]
	_ = x[LessEqualTok-19]
	_ = x[GreaterTok-20]
	_ = x[GreaterEqualTok-21]
	_ = x[AssignTok-22]
	_ = x[PlusAssignTok-23]
	_ = x[MinusAssignTok-24]
	_ = x[StarAssignTok-25]
	_ = x[SlashAssignTok-26]
	_ = x[PercentAssignTok-27]
	_ = x[IfTok-28]
	_ = x[ElseTok-29]
	_ = x[WhileTok-30]
	_ = x[ForTok-31]
	_ = x[FnTok-32]
	_ = x[SubTok-33]
	_ = x[ReturnTok-34]
	_ = x[BreakTok-35]
	_ = x[ContinueTok-36]
	_ = x[TrueTok-37]
	_ = x[FalseTok-38]
	_ = x[AndTok-39]
	_ = x[OrTok-40]
	_ = x[NotTok-41]
	_ = x[EndTok-42]
	_ = x[EofTok-43]
}

const _TokenType_name = "IdTokNumberTokStringTokNewlineTokLparenTokRparenTokLbraceTokRbraceTokArrowTokCommaTokColonTokPlusTokMinusTokStarTokSlashTokPercentTokEqualTokNotequalTokLessTokLessEqualTokGreaterTokGreaterEqualTokAssignTokPlusAssignTokMinusAssignTokStarAssignTokSlashAssignTokPercentAssignTokIfTokElseTokWhileTokForTokFnTokSubTokReturnTokBreakTokContinueTokTrueTokFalseTokAndTokOrTokNotTokEndTokEofTok"

var _TokenType_index = [...]uint16{0, 5, 14, 23, 33, 42, 51, 60, 69, 77, 85, 93, 100, 108, 115, 123, 133, 141, 152, 159, 171, 181, 196, 205, 218, 232, 245, 259, 275, 280, 287, 295, 301, 306, 312, 321, 329, 340, 347, 355, 361, 366, 372, 378, 384}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
